name: Deploy Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env: 
  AWS_REGION: eu-west-1
  FE-ECR_REPOSITORY: gaf-ecr-fe
  BE-ECR_REPOSITORY: gaf-ecr-be
  SHORT_SHA: $(echo ${{ github.sha }} | cut -c 1-8)

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v2

    - name: Test
      run: |
        cd code/site
        npm install 
        npm test

  build-fe:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - run-tests

    steps:
    - name: Clone
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: gaf-ecr-fe
        IMAGE_TAG: ${{ github.sha }} 
      
      run: |
        cd code/site
        docker build -t ${{ env.FE-ECR_REPOSITORY }} .
        docker tag ${{ env.FE-ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/${{ env.FE-ECR_REPOSITORY }}:latest
        docker tag ${{ env.FE-ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/${{ env.FE-ECR_REPOSITORY }}:${{ env.SHORT_SHA }}
        docker push ${{ env.ECR_REGISTRY }}/${{ env.FE-ECR_REPOSITORY }}:${{ env.SHORT_SHA }}
    
  build-be:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - run-tests

    steps:
    - name: Clone
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ env.REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }} 
      
      run: |
        cd code/server
        docker build -t ${{ env.BE-ECR_REPOSITORY }} .
        docker tag ${{ env.BE-ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/${{ env.BE-ECR_REPOSITORY}}:latest
        docker tag ${{ env.BE-ECR_REPOSITORY }}:latest ${{ env.ECR_REGISTRY }}/${{ env.BE-ECR_REPOSITORY}}:${{ env.SHORT_SHA }}
        docker push ${{ env.ECR_REGISTRY }}/${{ env.BE-ECR_REPOSITORY }}:${{ env.SHORT_SHA }}
  
  Deploy:
    needs: [build-be,build-fe]
    strategy:
      fail-fast: true
      matrix:
        target: [Development, Production]
    uses: ./.github/workflows/deploy.yaml
    with:
      target-env: ${{ matrix.target }}
    secrets: inherit
    
  